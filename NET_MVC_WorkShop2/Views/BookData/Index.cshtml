@model NET_MVC_WorkShop2.Models.BookData

@{
    ViewBag.Title = "查詢書籍";
}
<!DOCTYPE html>
<html>
<head>
</head>
<body>
    <h2>查詢書籍</h2>
    @using (Html.BeginForm("Index", "BookData", FormMethod.Post, new { id = "Form1" }))
    {
    <div class="form-horizontal">
        <div class="form-group" style="display: none">
            @Html.LabelFor(model => model.Book_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Book_ID, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Book_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Book_Name, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Book_Class_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Book_Class_Name, new { @class = "form-control", id = "Book_Class_Name", name = "Book_Class_Name", style = "width: 30%;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Book_Keeper, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Book_Keeper, new { @class = "form-control", id = "Book_Keeper", name = "Book_Keeper", style = "width: 30%;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Book_Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Book_Status, new { @class = "form-control", id = "Book_Status", name = "Book_Status", style = "width: 30%;" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <input type="submit" value="查詢" id="submit" class="btn btn-default" />
                <input type="reset" value="清除" class="btn btn-default" onclick="javascript:window.location='@Url.Action("Index")'"/>
                <input type="button" value="新增" class="btn btn-default" id="insert" />
            </div>
        </div>
    </div>
        <div id="book_grid"></div>
    }
    <div class="form-group" id="window" style="display: none">
        <form id="insert_form">
            <ul class="fieldlist" style="list-style-type:none" id="ul_form">
                <li>
                    @Html.LabelFor(model => model.Book_Name, htmlAttributes: new { @class = "require", style = "text-align: left" })
                    @Html.TextBoxFor(model => model.Book_Name, new { @class = "form-control", id = "Book_Name", name = "Book_Class_Name", required = "required", validationmessage = "這是必填欄位" })
                </li>
                <li>
                    @Html.LabelFor(model => model.Book_Author, htmlAttributes: new { @class = "require", style = "text-align: left" })
                    @Html.TextBoxFor(model => model.Book_Author, new { @class = "form-control", id = "Book_Author", required = "required", validationmessage = "這是必填欄位" })
                </li>
                <li>
                    @Html.LabelFor(model => model.Book_Publisher, htmlAttributes: new { @class = "require", style = "text-align: left" })
                    @Html.TextBoxFor(model => model.Book_Publisher, new { @class = "form-control", id = "Book_Publisher", required = "required", validationmessage = "這是必填欄位" })
                </li>
                <li>
                    @Html.LabelFor(model => model.Book_Note, htmlAttributes: new { @class = "require", style = "text-align: left" })
                    @Html.TextAreaFor(model => model.Book_Note, new { @class = "form-control", id = "Book_Note", required = "required", validationmessage = "這是必填欄位" })
                </li>
                <li>
                    @Html.LabelFor(model => model.Book_BoughtDate, htmlAttributes: new { @class = "require", style = "text-align: left" })<br>
                    @Html.TextBoxFor(model => model.Book_BoughtDate, new { @class = "form-control", id = "Book_BoughtDate", required = "required", validationmessage = "這是必填欄位", style = "width:70%;padding-right: 3px;" })
                </li>
                <li>
                    @Html.LabelFor(model => model.Book_Class_ID, htmlAttributes: new { @class = "require", style = "text-align: left" })<br>
                    @Html.TextBoxFor(model => model.Book_Class_ID, new { @class = "form-control", id = "Book_Class_ID", required = "required", validationmessage = "這是必填欄位", style = "width:70%;padding-right: 3px;" })
                </li>
                <li name="hidden" style="display: none">
                    @Html.LabelFor(model => model.Book_Status, htmlAttributes: new { @class = "require", style = "text-align: left" })<br>
                    @Html.TextBoxFor(model => model.Book_Status, new { @class = "form-control", id = "status_value", name = "Book_Status", required = "required", validationmessage = "這是必填欄位", style = "width:70%;padding-right: 3px;" })
                </li>
                <li name="hidden" style="display: none">
                    @Html.LabelFor(model => model.Book_Keeper, htmlAttributes: new { @class = "require", style = "text-align: left" })<br>
                    @Html.TextBoxFor(model => model.Book_Keeper, new { @class = "form-control",id= "keeper_value", name = "Book_Keeper", required = "required", validationmessage = "這是必填欄位", style = "width:70%;padding-right: 3px;" })
                </li>
                <li>
                    <input type="button" value="儲存" class="btn btn-primary" id="save_insert" style="vertical-align:middle;" />
                </li>

            </ul>
        </form>
    </div>
    
    <script>
        $(document).ready(function () {
            //取得書籍資料
            $.ajax({
                type: "Post",
                url: "/BookData/Search",
                dataType: "json",
                success: function (response) {
                    GridData(response);
                }, error: function (error) {
                    alert("系統發生錯誤");
                }
            });

            ///查詢
            $('#submit').click(function () {
                $.ajax({
                    type: "Post",
                    url: "/BookData/Search",
                    data: $('#Form1').serialize(),
                    dataType: "json",
                    success: function (response) {
                        $("#book_grid").data("kendoGrid")
                            .dataSource
                            .data(response);
                    }, error: function (error) {
                        alert("系統發生錯誤");
                    }
                });
                return false;
            });

            //儲存新增
            $('#save_insert').click(function () {
                $('#status_value').val("A");
                $('#keeper_value').val(" ");
                $.ajax({
                    type: "Post",
                    url: "/BookData/Insert",
                    data: $('#insert_form').serialize(),
                    dataType: "json",
                    success: function (response) {
                        $("#book_grid").data("kendoGrid")
                            .dataSource
                            .add(response);
                        location.reload();
                    }, error: function (error) {
                        alert("系統發生錯誤");
                    }
                });
                $("#window").data('kendoWindow').close();
                return false;
            });
            //新增視窗
            $('#insert').click(function () {
                //$('#ul_form').attr('hidden').css("display", "none");
                $("#window").kendoWindow({
                    width: "500px",
                    title: "新增書籍",
                    visible: false,
                    modal: true,
                    actions: [
                        "Pin",
                        "Minimize",
                        "Maximize",
                        "Close"
                    ]
                });
                var popup = $("#window").data('kendoWindow');
                popup.open();
                popup.center();
            });

            //日期選擇
            $("#Book_BoughtDate").kendoDatePicker({
                value: new Date(),
                format: "yyyy/MM/dd"
            });
            //新增書籍類別選擇
            $("#Book_Class_ID").kendoDropDownList({
                dataTextField: "Book_Class_ID",
                dataValueField: "Book_Class_ID",
                optionLabel: "請選擇...",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: "/BookData/GetBook_Class_ID",
                        }
                    }
                }
            });
            //書籍類別選擇
            $("#Book_Class_Name").kendoDropDownList({
                dataTextField: "Book_Class_Name",
                dataValueField: "Book_Class_Name",
                optionLabel: "請選擇...",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: "/BookData/GetBook_Class_Name",
                        }
                    }
                }
            });

            //書籍狀態選擇
            $("input[name='Book_Status']").kendoDropDownList({
                dataTextField: "Book_Status",
                dataValueField: "Book_Status",
                optionLabel: "請選擇...",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: "/BookData/GetBook_Status",
                        }
                    }
                }
            });

            //借閱人選擇
            $("input[name='Book_Keeper']").kendoDropDownList({
                dataTextField: "Book_Keeper",
                dataValueField: "Book_Keeper",
                optionLabel: "請選擇...",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: "/BookData/GetBook_Keeper",
                        }
                    }
                }
            });

        });
        //Grid
        function GridData(dataSource) {
            $("#book_grid").kendoGrid({
                dataSource: {
                    data: dataSource,
                    pageSize: 20
                },
                pageable: {
                    input: true,
                    numeric: false
                },
                sortable: true,
                columns: [
                    {
                        hidden: true,
                        field: "Book_ID",
                        title: "書籍編號",
                        width: 100
                    },
                    {
                        field: "Book_Class_Name",
                        title: "書籍分類",
                        width: 100
                    }, {
                        field: "Book_Name",
                        title: "書名",
                        width: 200
                    }, {
                        field: "Book_BoughtDate",
                        title: "購書日期",
                        format: "{0: yyyy-MM-dd}",
                        width: 150
                    }, {
                        field: "Book_Status",
                        title: "書籍狀態",
                        width: 150
                    }, {
                        field: "Book_Keeper",
                        title: "借閱人",
                        width: 100
                    }, {
                        command: [{
                            text: "刪除",
                            click: DeleteDetails
                        }],
                        width: 100
                    }]
            });
        };
        function DeleteDetails(e) {
            var r = confirm("確認刪除?");
            if (r == true) {
                var dataItem = this.dataItem($(e.target).closest("tr"));
                console.log(typeof(dataItem.Book_ID));
                $.ajax({
                    type: "POST",
                    url: "/BookData/Delete",
                    data: "BookId=" + dataItem.Book_ID,
                    dataType: "json",
                    success: function (response) {
                        e.preventDefault();
                        $("#book_grid").data("kendoGrid").dataSource.remove(dataItem);
                        console.log(response);
                        alert("刪除成功");
                    }, error: function (error) {
                        alert("系統發生錯誤");
                    }
                });
                return false;
            }
            else {
                return false;
            }
        }

    </script>
</body>
</html>